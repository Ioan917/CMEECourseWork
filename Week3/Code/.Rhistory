summary(mT1)
# not significant, so the more complex model does not explain the data better
summary(mT3)
## Housekeeping
rm(list = ls())
## Load data
d <- read.table("../Data/DataForLinearMM.txt", header = T)
str(d)
max(d$Individual)
d$Individual <- as.factor(d$Individual)
names(d)
## Examine plots
par(mfrow = c(2,3))
## Examine plots
par(mfrow = c(2,3))
hist(d$LitterSize)
hist(d$Size)
hist(d$Hornlength)
hist(d$Bodymass)
hist(d$Glizz)
hist(d$SexualActivity)
hist(d$LitterSize)
hist(d$Size)
hist(d$Hornlength)
hist(d$Bodymass)
hist(d$Glizz)
hist(d$SexualActivity)
dev.off()
## Plotting
par(mfrow = c(1,3))
boxplot(d$Bodymass ~ d$Sex)
boxplot(d$Size ~ d$Sex)
boxplot(d$Size ~ d$Sex)
## Plotting
par(mfrow = c(1,3))
boxplot(d$Bodymass ~ d$Sex)
boxplot(d$Size ~ d$Sex)
boxplot(d$Hornlength ~ d$Sex)
## Modelling
h1m1 <- lmer(BodyMass ~ Sex + (1|Individual), data = d)
## Modelling
h1m1 <- lmer(Bodymass ~ Sex + (1|Individual), data = d)
summary(h1m1)
h1m2 <- lmer(Bodymass ~ Sex + (1|Individual) + (1|Family), data = d)
summary(h1m2)
lrtest(h1m1, h1m2)
mR <- lmer(Bodymass ~ 1 + (1|Individual), data = d)
summary(mR)
repeatability <- 0.56/(0.46 + 0.72)
repeatability
## Check for relationship betweeen bodymass and hornlength
plot(Bodymass ~ Hornlength, data = d, pch = 19, cex = 0.5)
dev.off()
## Check for relationship betweeen bodymass and hornlength
plot(Bodymass ~ Hornlength, data = d, pch = 19, cex = 0.5)
## Modeling
h2m1 <- lmer(Bodymass ~ Hornlength + Glizz + (1|Individual) + (1|Family),
data = d)
summary(h2m1)
h2m2 <- lmer(Bodymass ~ Hornlength + (1|Individual) + (1|Family),
data = d)
summary(h2m2)
## Check out the residuals
plot(h2m2)
dev.off()
## Plot
plot(Bodymass ~ Hornlength, data = d, pch = 19, cex = 0.5)
abline(0.16, 0.054)
#!/usr/bin/env Rscript --vanilla
# Title: Habitat_comparisons.R
# Author details: Author: Ioan Evans, Contact details: ie917@ic.ac.uk
# Date: Nov 2020
# Script and data info: Compare AICc and BIC values for each mechanistic models per habitat.
# Copyright statement: none
################################################################################
#################### COMPARE AICc AND BIC BETWEEN HABITATS #####################
################################################################################
## Housekeeping
rm(list = ls())
graphics.off()
set.seed(1)
## Load packages
require(cowplot)
require(dplyr)
require(ggplot2)
require(xtable)
## Load functions
source("my_functions.R")
################################################################################
###################################### PREPARE DATA ############################
################################################################################
## Load data
data <- read.csv("../Data/CRat.csv")
goodness_fit_AICc <- read.csv("../Data/goodness_fit_AICc.csv")
goodness_fit_BIC <- read.csv("../Data/goodness_fit_BIC.csv")
## Extract relevant columns
AICc_TypeI <- goodness_fit_AICc[,c("ID","AICc_TypeI")]
AICc_TypeII <- goodness_fit_AICc[,c("ID","AICc_TypeII")]
AICc_TypeIII <- goodness_fit_AICc[,c("ID","AICc_TypeIII")]
AICc_General <- goodness_fit_AICc[,c("ID","AICc_General")]
BIC_TypeI <- goodness_fit_BIC[,c("ID","BIC_TypeI")]
BIC_TypeII <- goodness_fit_BIC[,c("ID","BIC_TypeII")]
BIC_TypeIII <- goodness_fit_BIC[,c("ID","BIC_TypeIII")]
BIC_General <- goodness_fit_BIC[,c("ID","BIC_General")]
## Create new data frames
## AICc
Model <- rep("TypeI", length(AICc_TypeI$ID))
AICc_TypeI <- cbind(AICc_TypeI, Model)
names(AICc_TypeI) <- c("ID","AICc","Model")
Model <- rep("TypeII", length(AICc_TypeII$ID))
AICc_TypeII <- cbind(AICc_TypeII, Model)
names(AICc_TypeII) <- c("ID","AICc","Model")
Model <- rep("TypeIII", length(AICc_TypeIII$ID))
AICc_TypeIII <- cbind(AICc_TypeIII, Model)
names(AICc_TypeIII) <- c("ID","AICc","Model")
Model <- rep("General", length(AICc_General$ID))
AICc_General <- cbind(AICc_General, Model)
names(AICc_General) <- c("ID","AICc","Model")
AICc_final <- rbind(AICc_TypeI, AICc_TypeII)
AICc_final <- rbind(AICc_final, AICc_TypeIII)
AICc_final <- rbind(AICc_final, AICc_General)
## BIC
Model <- rep("TypeI", length(BIC_TypeI$ID))
BIC_TypeI <- cbind(BIC_TypeI, Model)
names(BIC_TypeI) <- c("ID","BIC","Model")
Model <- rep("TypeII", length(BIC_TypeII$ID))
BIC_TypeII <- cbind(BIC_TypeII, Model)
names(BIC_TypeII) <- c("ID","BIC","Model")
Model <- rep("TypeIII", length(BIC_TypeIII$ID))
BIC_TypeIII <- cbind(BIC_TypeIII, Model)
names(BIC_TypeIII) <- c("ID","BIC","Model")
Model <- rep("General", length(BIC_General$ID))
BIC_General <- cbind(BIC_General, Model)
names(BIC_General) <- c("ID","BIC","Model")
BIC_final <- rbind(BIC_TypeI, BIC_TypeII)
BIC_final <- rbind(BIC_final, BIC_TypeIII)
BIC_final <- rbind(BIC_final, BIC_General)
################################################################################
############################# ANALYSIS OF VARIANCE #############################
################################################################################
############################## AICc AGAINST MODEL ##############################
## ANOVA
anova_A <- aov(AICc_final$AICc ~ AICc_final$Model)
summary(anova_A)
anova_B <- aov(BIC_final$BIC ~ BIC_final$Model)
summary(anova_B)
## TukeyHSD
TukeyHSD(anova_A)
TukeyHSD(anova_B)
######################## AICc AGAINST MODEL AND HABITAT ########################
## Merge with data to get habitat column
data <- data[,c("ID","Habitat")]
AICc_final <- left_join(AICc_final, data, by = "ID")
AICc_final <- unique(AICc_final)
BIC_final <- left_join(BIC_final, data, by = "ID")
BIC_final <- unique(BIC_final)
## ANOVA
anova_A <- aov(AICc_final$AICc ~ AICc_final$Model * AICc_final$Habitat)
summary(anova_A)
anova_B <- aov(BIC_final$BIC ~ BIC_final$Model * BIC_final$Habitat)
summary(anova_B)
## TukeyHSD
Tukey_A <- TukeyHSD(anova_A)
Tukey_B <- TukeyHSD(anova_B)
bold <- function(x) {paste('{\\textbf{',x,'}}', sep ='')}
print(xtable(tidy(Tukey_A), digitis = 3),
sanitize.colnames.function = bold,
file = "../Results/Habitat_AICc",
floating = FALSE,
latex.environments = NULL,
booktabs = TRUE)
print(xtable(tidy(Tukey_B), digitis = 3),
sanitize.colnames.function = bold,
file = "../Results/Habitat_BIC",
floating = FALSE,
latex.environments = NULL,
booktabs = TRUE)
##################################### PLOT #####################################
p <- ggplot(data = AICc_final, aes(x = Model, AICc)) +
geom_violin(color = "steelblue", size = 1) +
stat_summary(fun=median, geom="point", size=2, shape = 18, color="black") +
theme_bw() +
ylab("AICc") +
facet_wrap(~ Habitat) +
theme(aspect.ratio = 1,
axis.title.x=element_blank(),
axis.title.y = element_text(vjust=1),
plot.margin=unit(c(0.5,0.5,0.5,0.5),"cm"),
text = element_text(size=15))
q <- ggplot(data = BIC_final, aes(x = Model, BIC)) +
geom_violin(color = "steelblue", size = 1) +
stat_summary(fun=median, geom="point", size=2, shape = 18, fill="black") +
theme_bw() +
ylab("BIC") +
facet_wrap(~ Habitat) +
theme(aspect.ratio = 1,
axis.title.x=element_blank(),
axis.title.y = element_text(vjust=1),
plot.margin=unit(c(0.5,0.5,1,0.5),"cm"),
text = element_text(size=15))
final_plot <- plot_grid(p + theme(legend.position = "none"),
q + theme(legend.position = "none"),
labels = c("a","b"),
hjust = -2,
nrow = 2) +
draw_label("Models", x = 0.55, y = 0.01, vjust = 0, angle = 0)
pdf("../Results/Model_fits_per_habitat.pdf", width = 9.2, height = 7.3)
print(final_plot)
dev.off()
setwd("~/Documents/CMEECourseWork/MiniProject/Code")
#!/usr/bin/env Rscript --vanilla
# Title: Habitat_comparisons.R
# Author details: Author: Ioan Evans, Contact details: ie917@ic.ac.uk
# Date: Nov 2020
# Script and data info: Compare AICc and BIC values for each mechanistic models per habitat.
# Copyright statement: none
################################################################################
#################### COMPARE AICc AND BIC BETWEEN HABITATS #####################
################################################################################
## Housekeeping
rm(list = ls())
graphics.off()
set.seed(1)
## Load packages
require(cowplot)
require(dplyr)
require(ggplot2)
require(xtable)
## Load functions
source("my_functions.R")
################################################################################
###################################### PREPARE DATA ############################
################################################################################
## Load data
data <- read.csv("../Data/CRat.csv")
goodness_fit_AICc <- read.csv("../Data/goodness_fit_AICc.csv")
goodness_fit_BIC <- read.csv("../Data/goodness_fit_BIC.csv")
## Extract relevant columns
AICc_TypeI <- goodness_fit_AICc[,c("ID","AICc_TypeI")]
AICc_TypeII <- goodness_fit_AICc[,c("ID","AICc_TypeII")]
AICc_TypeIII <- goodness_fit_AICc[,c("ID","AICc_TypeIII")]
AICc_General <- goodness_fit_AICc[,c("ID","AICc_General")]
BIC_TypeI <- goodness_fit_BIC[,c("ID","BIC_TypeI")]
BIC_TypeII <- goodness_fit_BIC[,c("ID","BIC_TypeII")]
BIC_TypeIII <- goodness_fit_BIC[,c("ID","BIC_TypeIII")]
BIC_General <- goodness_fit_BIC[,c("ID","BIC_General")]
## Create new data frames
## AICc
Model <- rep("TypeI", length(AICc_TypeI$ID))
AICc_TypeI <- cbind(AICc_TypeI, Model)
names(AICc_TypeI) <- c("ID","AICc","Model")
Model <- rep("TypeII", length(AICc_TypeII$ID))
AICc_TypeII <- cbind(AICc_TypeII, Model)
names(AICc_TypeII) <- c("ID","AICc","Model")
Model <- rep("TypeIII", length(AICc_TypeIII$ID))
AICc_TypeIII <- cbind(AICc_TypeIII, Model)
names(AICc_TypeIII) <- c("ID","AICc","Model")
Model <- rep("General", length(AICc_General$ID))
AICc_General <- cbind(AICc_General, Model)
names(AICc_General) <- c("ID","AICc","Model")
AICc_final <- rbind(AICc_TypeI, AICc_TypeII)
AICc_final <- rbind(AICc_final, AICc_TypeIII)
AICc_final <- rbind(AICc_final, AICc_General)
## BIC
Model <- rep("TypeI", length(BIC_TypeI$ID))
BIC_TypeI <- cbind(BIC_TypeI, Model)
names(BIC_TypeI) <- c("ID","BIC","Model")
Model <- rep("TypeII", length(BIC_TypeII$ID))
BIC_TypeII <- cbind(BIC_TypeII, Model)
names(BIC_TypeII) <- c("ID","BIC","Model")
Model <- rep("TypeIII", length(BIC_TypeIII$ID))
BIC_TypeIII <- cbind(BIC_TypeIII, Model)
names(BIC_TypeIII) <- c("ID","BIC","Model")
Model <- rep("General", length(BIC_General$ID))
BIC_General <- cbind(BIC_General, Model)
names(BIC_General) <- c("ID","BIC","Model")
BIC_final <- rbind(BIC_TypeI, BIC_TypeII)
BIC_final <- rbind(BIC_final, BIC_TypeIII)
BIC_final <- rbind(BIC_final, BIC_General)
################################################################################
############################# ANALYSIS OF VARIANCE #############################
################################################################################
############################## AICc AGAINST MODEL ##############################
## ANOVA
anova_A <- aov(AICc_final$AICc ~ AICc_final$Model)
summary(anova_A)
anova_B <- aov(BIC_final$BIC ~ BIC_final$Model)
summary(anova_B)
## TukeyHSD
TukeyHSD(anova_A)
TukeyHSD(anova_B)
######################## AICc AGAINST MODEL AND HABITAT ########################
## Merge with data to get habitat column
data <- data[,c("ID","Habitat")]
AICc_final <- left_join(AICc_final, data, by = "ID")
AICc_final <- unique(AICc_final)
BIC_final <- left_join(BIC_final, data, by = "ID")
BIC_final <- unique(BIC_final)
## ANOVA
anova_A <- aov(AICc_final$AICc ~ AICc_final$Model * AICc_final$Habitat)
summary(anova_A)
anova_B <- aov(BIC_final$BIC ~ BIC_final$Model * BIC_final$Habitat)
summary(anova_B)
## TukeyHSD
Tukey_A <- TukeyHSD(anova_A)
Tukey_B <- TukeyHSD(anova_B)
bold <- function(x) {paste('{\\textbf{',x,'}}', sep ='')}
print(xtable(tidy(Tukey_A), digitis = 3),
sanitize.colnames.function = bold,
file = "../Results/Habitat_AICc",
floating = FALSE,
latex.environments = NULL,
booktabs = TRUE)
print(xtable(tidy(Tukey_B), digitis = 3),
sanitize.colnames.function = bold,
file = "../Results/Habitat_BIC",
floating = FALSE,
latex.environments = NULL,
booktabs = TRUE)
##################################### PLOT #####################################
p <- ggplot(data = AICc_final, aes(x = Model, AICc)) +
geom_violin(color = "steelblue", size = 1) +
stat_summary(fun=median, geom="point", size=2, shape = 18, color="black") +
theme_bw() +
ylab("AICc") +
facet_wrap(~ Habitat) +
theme(aspect.ratio = 1,
axis.title.x=element_blank(),
axis.title.y = element_text(vjust=1),
plot.margin=unit(c(0.5,0.5,0.5,0.5),"cm"),
text = element_text(size=15))
q <- ggplot(data = BIC_final, aes(x = Model, BIC)) +
geom_violin(color = "steelblue", size = 1) +
stat_summary(fun=median, geom="point", size=2, shape = 18, fill="black") +
theme_bw() +
ylab("BIC") +
facet_wrap(~ Habitat) +
theme(aspect.ratio = 1,
axis.title.x=element_blank(),
axis.title.y = element_text(vjust=1),
plot.margin=unit(c(0.5,0.5,1,0.5),"cm"),
text = element_text(size=15))
final_plot <- plot_grid(p + theme(legend.position = "none"),
q + theme(legend.position = "none"),
labels = c("a","b"),
hjust = -2,
nrow = 2) +
draw_label("Models", x = 0.55, y = 0.01, vjust = 0, angle = 0)
pdf("../Results/Model_fits_per_habitat.pdf", width = 9.2, height = 7.3)
print(final_plot)
dev.off()
View(AICc_final)
## lmer
lmer(AICc ~ 1 + (1|Model) + (1|Habitat))
## lmer
lmer(AICc ~ 1 + (1|Model) + (1|Habitat), data = AICc_final)
rm(list=ls())
setwd("~/Documents/CMEEother/Stats2/Day3/Code")
## Housekeeping
rm(list = ls())
graphics.off()
## Packages
require(ggplot2)
require(MASS)
require(ggpubr)
install.packages("ggpube")
install.packages("ggpubr")
## Load data
fish <- read.csv("../Data/fisheries.csv", stringsAsFactors = T)
str(fish)
require(ggpubr)
## Initial scatterplot
ggplot(fish, aes(x = MeanDepth, y = TotAbund)) +
geom_point() +
labs(x = "Mean Depth (km)", y = "Total Aundance") +
theme_classic()
## Fitting the model
M1 <- glm(TotAbund ~ MeanDepth, data = fish, family = "poisson")
summary(M1)
## Model validation
par(mfrow = c(2,2))
plot(M1)
# Plot 4 suggests we potentially have a large number of outliers and can explore
# these in more detail
sum(cooks.distance(M1) > 1)
## Dispersion parameter
14770/144
## Dispersion parameter
15770/144 # 102.5694 - overdispersed
scatterplot <- ggplot(fish, aes(x = MeanDepth, y = TotAbund, color = factor(Period))) +
geom_point() +
labs(x = "Mean Depth (km)", y = "Total Abundance") +
theme_classic() +
scale_color_discrete(name = "Period", labels = c("1979-1989", "1997-2002"))
boxplot <- ggplot(fish, aes(x = factor(Period, labels = c("1979-1989","1997-2002")),
y = TotAbund)) +
geom_boxplot() +
theme_classic() +
labs(x = "Period", y = "Total Abundance")
ggarrange(scatterplot, boxplot, labels = c("A","B"), ncol = 1, nrow = 2)
## Adding period as a fixed factor
M2 <- glm(TotAbund ~ MeanDepth * factor(Period), data = fish, family = "poisson")
summary(M2)
anova(M2, test = "Chisq")
## Dispersion parameter
14293 / 142
######################### Fitting a negative binomial ##########################
M3 <- glm.nb(TotAbund ~ MeanDepth * factor(Period), data = fish)
summary(M3)
anova(M3, test = "Chisq")
## Interaction term is not not significant
## Run reduced model (without the interaction)
M4 <- glm.nb(TotAbund ~ MeanDepth + factor(Period), data = fish)
summary(M4)
anova(M4, test = "Chisq")
## Model diagnostics
par(mfrow = c(2,2))
plot(M4)
## Dispersion parameter
158.23 / 143
## Pseudo-R^2
1 - (158.23/334.13)
period1 <- data.frame(MeanDepth = seq(from = 0.804, to 4.865, length = 100),
Period = "1")
period1 <- data.frame(MeanDepth = seq(from = 0.804, to = 4.865, length = 100),
Period = "1")
period2 <- data.frame(MeanDepth = seq(from = 0.804, to = 4.865, length = 100),
Period = "2")
range(fish$MeanDepth) # Finding the range of MeanDepth
period1 <- data.frame(MeanDepth = seq(from = 0.804, to = 4.865, length = 100),
Period = "1")
period2 <- data.frame(MeanDepth = seq(from = 0.804, to = 4.865, length = 100),
Period = "2")
period1_predictions <- predict(M4, newdata = period1, type = "link", se.fit = TRUE)
period2_predictions <- predict(M4, newdata = period2, type = "link", se.fit = TRUE)
period1$pred <- period1_predictions$fit
period1$se <- period1_predictions$se.fit
period1$upperCI<- period1$pred+(period1$se*1.96)
period1$lowerCI<- period1$pred-(period1$se*1.96)
period2$pred<- period2_predictions$fit
period2$se<- period2_predictions$se.fit
period2$upperCI<- period2$pred+(period2$se*1.96)
period2$lowerCI<- period2$pred-(period2$se*1.96)
complete<- rbind(period1, period2)
ggplot(complete, aes(x = MeanDepth, y = exp(pred))) +
geom_line(aes(color = factor(Period))) +
geom_ribbon(aes(ylim = exp(lowerCI), ylax = exp(upperCI),
fill = factor(Period), alpha = 0.3), show.legend = FALSE) +
geom_point(fish, mapping = aes(x = MeanDepth, y = TotalAbund, color = factor(Period))) +
labs(y = "Total Abundance", x = "Mean Depth (km") +
theme_classic() +
scale_color_discrete(name = "Period", labels = c("1979-1989", "1997-2002"))
ggplot(complete, aes(x=MeanDepth, y=exp(pred)))+
geom_line(aes(color=factor(Period)))+
geom_ribbon(aes(ymin=exp(lowerCI), ymax=exp(upperCI), fill=factor(Period), alpha=0.3), show.legend = FALSE)+
geom_point(fish, mapping = aes(x=MeanDepth, y=TotAbund, color=factor(Period)))+
labs(y="Total Abundance", x="Mean Depth (km)")+
theme_classic()+
scale_color_discrete(name="Period", labels=c("1979-1989", "1997-2002"))
########################## Fitting the poisson model ###########################
mites <- read.csv("../Data/bee_mites.csv")
########################## Fitting the poisson model ###########################
mites <- read.csv("../Data/bee_mites.csv")
mites_m1 <- glm(Dead_mites ~ Concentration, data = mites, family = "poisson")
summary(mites_m1)
############################### Model validation ###############################
## Dispersion parameter
109.25 / 113
## Plot
par(mfrow = c(2,2))
plot(mites_m1)
################################### Plotting ###################################
range(mites$Concentration) # Finding the range of concentration
new_data <- data.frame(Concentration=seq(from=0, to=2.16, length=100))
predictions<- predict(mites_m1, newdata = new_data, type = "link", se.fit = TRUE) # the type="link" here predicted the fit and se on the log-linear scale.
new_data$pred<- predictions$fit
new_data$se<- predictions$se.fit
new_data$upperCI<- new_data$pred+(new_data$se*1.96)
new_data$lowerCI<- new_data$pred-(new_data$se*1.96)
ggplot(new_data, aes(x=Concentration, y=exp(pred)))+
geom_line(col="black")+
geom_ribbon(aes(ymin=exp(lowerCI), ymax=exp(upperCI), alpha=0.1), show.legend = FALSE, fill="grey")+
geom_point(mites, mapping = aes(x=Concentration, y=Dead_mites), col="blue")+
labs(y="Number of Dead Mites", x="Concentration (g/l)")+
theme_classic()
setwd("~/Documents/CMEECourseWork/Week3/Code")
#packages
require(dplyr)
require(readr)
# read in dataset
MyDF <- as.data.frame(read.csv("../Data/EcolArchives-E089-51-D1.csv"))
# create function that does a linear regression, and outputs regression values into a dataframe
create_lm_model <- function(data) {
model <- lm(log10(Predator.mass) ~ log10(Prey.mass), data = data)
anova.res <- anova(model)
model.res <- summary(model)
outputDF <- data.frame(intercept = model.res$coefficients[1],
slope = model.res$coefficients[2],
r_squared = model.res$r.squared,
F_val = anova.res$`F value`[1],
P_val = anova.res$`Pr(>F)`[1])
return(outputDF)
}
#initialise dataframe
model_result <- data.frame()
#use piping to group data and perform create_lm_model() on it
model_result <-
MyDF %>%
group_by(Type.of.feeding.interaction, Predator.lifestage, Location) %>%
group_modify(~ create_lm_model(.))
#write model_result to csv
write_csv(model_result, "../Results/PP_Regress_loc_Results.csv")
